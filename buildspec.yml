version: 0.2

  #env:
  #variables:
  # key: "value"
  # key: "value"
  #parameter-store:
  # key: "value"
  # key: "value"
  #secrets-manager:
  # key: secret-id:json-key:version-stage:version-id
  # key: secret-id:json-key:version-stage:version-id
  #exported-variables:
  # - variable
  # - variable
  #git-credential-helper: yes
  #batch:
  #fast-fail: true
  #build-list:
  #build-matrix:
#build-graph:
phases:
  install:
    #Ubuntu 표준 이미지 2.0 이상을 사용하는 경우 런타임 버전을 지정해야 합니다.
    #런타임 버전을 지정하는 경우 Ubuntu 표준 이미지 2.0 이외의 이미지를 사용하면 빌드에 실패합니다.
    runtime-versions:
      docker : 19
      # name: version
      #commands:
      # - command
      # - command
  pre_build:
    commands:
      - echo Loggin in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 844148244640.dkr.ecr.us-east-1.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t libraryapp:v${CODEBUILD_BUILD_NUMBER} .
      - docker tag libraryapp:v${CODEBUILD_BUILD_NUMBER} ${ECR_REPOSITORY_URI}:v${CODEBUILD_BUILD_NUMBER}
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${ECR_REPOSITORY_URI}:v${CODEBUILD_BUILD_NUMBER}
      - echo Writing image definitions file...
      - printf '[{"name":"libraryapp-container","imageUri":"%s"}]' 844148244640.dkr.ecr.us-east-1.amazonaws.com/libraryapp:latest > imagedefinitions.json
      #reports:
      #report-name-or-arn:
      #files:
      # - location
      # - location
    #base-directory: location
    #discard-paths: yes
    #file-format: JunitXml | CucumberJson
artifacts:
  files:
    - imagedefinitions.json
    # - location
    # - location
    #name: $(date +%Y-%m-%d)
    #discard-paths: yes
    #base-directory: location
    #cache:
    #paths:
    # - paths